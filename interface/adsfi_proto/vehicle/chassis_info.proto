syntax = "proto2";

package adsfi_proto.hz_Adsfi;

import "adsfi_proto/common/types.proto";

message AlgVcuInfo {
  optional uint32 vcu_act_gear_position = 1;
  optional bool vcu_act_gear_position_valid = 2;
  optional uint32 vcu_real_throttle_position = 3;
  optional bool vcu_real_throttle_pos_valid = 4;
  optional uint32 vcu5_pwr_train_failure_level = 5;
  optional uint32 vcu5_ready_light_sts = 6;
}

message AlgSteeringInfo {
  optional double steering_angle = 1;
  optional bool steering_angle_valid = 2;
  optional double steering_angle_speed = 3;
  optional bool steering_angle_speed_valid = 4;
}

message AlgWheelInfo {
  optional double esc_fl_wheel_speed = 1;
  optional bool esc_fl_wheel_speed_valid = 2;
  optional uint32 esc_fl_wheel_direction = 3;
  optional double esc_fr_wheel_speed = 4;
  optional bool esc_fr_wheel_speed_valid = 5;
  optional uint32 esc_fr_wheel_direction = 6;
  optional double esc_rl_wheel_speed = 7;
  optional bool esc_rl_wheel_speed_valid = 8;
  optional uint32 esc_rl_wheel_direction = 9;
  optional double esc_rr_wheel_speed = 10;
  optional bool esc_rr_wheel_speed_valid = 11;
  optional uint32 esc_rr_wheel_direction = 12;
  optional float esc_fl_whl_pul_cnt = 13;
  optional float esc_fr_whl_pul_cnt = 14;
  optional float esc_rl_whl_pul_cnt = 15;
  optional float esc_rr_whl_pul_cnt = 16;
  optional bool esc_fl_whl_pul_cnt_valid = 17;
  optional bool esc_fr_whl_pul_cnt_valid = 18;
  optional bool esc_rl_whl_pul_cnt_valid = 19;
  optional bool esc_rr_whl_pul_cnt_valid = 20;
}

message AlgEscDrivingInfo {
  optional double esc_vehicle_speed = 1;
  optional bool esc_vehicle_speed_valid = 2;
  optional bool esc_brake_pedal_switch_status = 3;
  optional bool esc_brake_pedal_switch_valid = 4;
  optional float brk_ped_val = 5;
  optional double vehicle_spd_display = 6;
  optional bool vehicle_spd_display_valid = 7;
  optional bool esc_apa_standstill = 8;
  optional double esc_long_acc_value = 9;
  optional bool esc_long_acc_value_valid = 10;
  optional bool esc_long_acc_value_offset_valid = 11;
  optional double esc_lat_acc_value = 12;
  optional bool esc_lat_acc_value_valid = 13;
  optional double esc_yaw_rate = 14;
  optional bool esc_yaw_rate_valid = 15;
  optional uint32 idb1_failed_state = 16;
  optional float idb3_master_cyl_pressure = 17;
  optional bool idb5_brake_disc_temp_sts = 18;
  optional uint32 idb5_vehicle_stanstill = 19;
  optional bool idb5_jerk_active = 20;
  optional bool idb5_jerk_fail = 21;
  optional uint32 idb5_adas_prefill_sts = 22;
  optional bool idb5_aba_available = 23;
  optional bool idb5_abp_available = 24;
  optional bool idb5_aba_active = 25;
  optional bool idb5_aeb_active = 26;
  optional uint32 idb5_aeb_enable = 27;
  optional uint32 idb6_epb_available = 28;
  optional bool idb7_esc_active = 29;
  optional bool idb7_abs_active = 30;
  optional bool idb7_hba_active = 31;
  optional bool idb7_hba_fail = 32;
  optional bool idb7_tcs_active = 33;
  optional bool idb7_tcs_disable = 34;
  optional bool idb7_arp_active = 35;
  optional bool idb7_arp_failure = 36;
}

message AlgBodyStateInfo {
  optional uint32 bcm_fl_dr_opn = 1;
  optional uint32 bcm_fr_dr_opn = 2;
  optional uint32 bcm_rl_dr_opn = 3;
  optional uint32 bcm_rr_dr_opn = 4;
  optional uint32 bcm_tg_opn = 5;
  optional bool bcm_hod_open = 6;
  optional uint32 bcm_drv_seatbelt_buckle_sta = 7;
  optional uint32 bcm_front_wiper_st = 8;
  optional uint32 bcm_front_wiper_work_sts = 9;
  optional uint32 bcm_high_beam_st = 10;
  optional uint32 bcm_low_beam_st = 11;
  optional uint32 hazard_lamp_st = 12;
  optional bool bcm_front_fog_lamp_st = 13;
  optional bool bcm_rear_fog_lamp_st = 14;
  optional bool bcm_left_turn_light_st = 15;
  optional bool bcm_right_turn_light_st = 16;
  optional uint32 bcm_turn_light_sw = 17;
  optional uint32 bcm_front_lamp_st = 18;
}

message AlgCenterConsoleInfo {
  optional uint32 tsr_on_offset = 1;
  optional uint32 tsr_overspeed_on_offset = 2;
  optional uint32 ihbc_sys_sw_state = 3;
  optional uint32 factory_reset = 4;
  optional uint32 reset_all_setup = 5;
}

message AlgParkInfo {
  optional bool tcs_active = 1;
  optional bool abs_active = 2;
  optional bool arp_active = 3;
  optional bool esc_active = 4;
  optional uint32 epb_status = 5;
}

message AlgSWSwitchInfo {
  optional uint32 swsm_a_cruise_speed_add = 1;
  optional uint32 swsm_a_cruise_speed_minus = 2;
  optional uint32 swsm_a_cruise_distance_add = 3;
  optional uint32 swsm_a_cruise_distance_minus = 4;
}

enum AlgChassisErrorCode {
  NO_ERROR = 0;
  CMD_NOT_IN_PERIOD = 1;
  MANUAL_INTERVENTION = 2;
  CHASSIS_CAN_NOT_IN_PERIOD = 3;
  CHASSIS_ERROR_ON_STEER = 4;
  CHASSIS_ERROR_ON_BRAKE = 5;
  CHASSIS_ERROR_ON_THROTTLE = 6;
  CHASSIS_ERROR_ON_GEAR = 7;
  UNKNOW_ERROR = 8;
}

message AlgWarnningHmiInfo {
  optional uint32 adcs8_voice_mode = 1;
  optional uint32 rcta_on_offset = 2;
  optional uint32 fcta_on_offset = 3;
  optional uint32 dow_on_offset = 4;
  optional uint32 rcw_on_offset = 5;
  optional uint32 lca_on_offset = 6;
}

message AlgAvmPdsInfo {
  optional uint32 cdcs3_x_coordinate = 1;
  optional uint32 cdcs3_y_coordinate = 2;
  optional uint32 cdcs3_x_gesture_spd = 3;
  optional uint32 cdcs3_y_gesture_spd = 4;
  optional uint32 cdcs3_touch_evt_typ = 5;
  optional uint32 cdcs10_work_status = 6;
  optional uint32 cdcs11_low_speed_bsd_sw = 7;
  optional uint32 cdcs11_avm_3d_rotate = 8;
  optional uint32 cdcs11_avm_turn_light_start = 9;
  optional uint32 cdcs11_avm_steering_start = 10;
  optional uint32 cdcs11_avm_magnified_view = 11;
  optional uint32 cdcs11_avm_mod_detection = 12;
  optional uint32 cdcs11_gm_on_offset = 13;
  optional uint32 cdcs11_avm_auxiliary_line = 14;
  optional uint32 cdcs11_avm_rader_display = 15;
  optional uint32 cdcs11_avm_transparent_chassis = 16;
  optional uint32 cdcs11_gm_vided_in = 17;
  optional uint32 cdcs11_apa_function_mode = 18;
  optional uint32 cdcs11_track_reverse_sw = 19;
  optional uint32 cdcs11_set_pathway_sw = 20;
  optional uint32 cdcs11_avm_sw = 21;
  optional uint32 cdcs11_rpa_sw = 22;
  optional uint32 cdcs11_set_sw = 23;
  optional uint32 cdcs11_location_sw = 24;
  optional uint32 cdcs11_path_refresh = 25;
  optional uint32 cdcs11_hpa_guide_sw = 26;
  optional uint32 cdcs11_hpa_pathway_to_cloud_sw = 27;
  optional uint32 cdcs11_path_learning_sw = 28;
  optional uint32 cdcs11_pa_sw = 29;
  optional uint32 cdcs11_pa_recover = 30;
  optional uint32 cdcs11_select_slot_id = 31;
  optional uint32 cdcs11_parking_in_req = 32;
  optional uint32 cdcs11_parking_out_req = 33;
  optional uint32 cdcs11_avm_view_mode = 34;
  optional uint32 cdcs11_rpa_function_mode = 35;
  optional uint32 cdcs11_avm_initialization = 36;
  optional uint32 cdcs11_avm_spe_view = 37;
  optional uint32 cdcs11_avm_body_sync = 38;
  optional uint32 cdcs11_avm_license_plate_abbr = 39;
  optional uint32 cdcs11_avm_license_plate_area = 40;
  optional uint32 cdcs11_avm_license_plate_no1 = 41;
  optional uint32 cdcs11_avm_license_plate_no2 = 42;
  optional uint32 cdcs11_avm_license_plate_no3 = 43;
  optional uint32 cdcs11_avm_license_plate_no4 = 44;
  optional uint32 cdcs11_avm_license_plate_no5 = 45;
  optional uint32 cdcs11_avm_license_plate_no6 = 46;
  optional uint32 cdcs11_avm_license_plate_no7 = 47;
  optional uint32 cdcs11_avm_license_plate_no8 = 48;
  optional uint32 cdcs11_avm_diaphaneity_sw = 49;
  optional uint32 cdcs11_mod_sound_sw = 50;
  optional uint32 cdcs11_mod_bsd_sw = 51;
  optional uint32 cdcs11_pa_frs_on_offset = 52;
  optional uint32 cdcs11_pa_3d_on_offset = 53;
  optional uint32 cdcs11_pa_measure_on_offset = 54;
  optional uint32 cdcs11_mod_sw = 55;
  optional uint32 cdcs11_hpa_sw = 56;
  optional uint32 cdcs11_delete_map_id = 57;
  optional uint32 cdcs11_upload_map_id = 58;
  optional uint32 cdcs11_hpa_preparking_sw = 59;
  optional uint32 cdcs11_hpa_pathway_to_cloud_work_sts = 60;
  optional uint32 cdcs11_parking_out_slot_type = 61;
  optional uint32 cdcs11_parking_out_slot_dire = 62;
  optional uint32 cdcs11_optional_slot_type = 63;
  optional uint32 cdcs11_optional_slot_dire = 64;
  optional float cdcs11_optional_slot_angle = 65;
  optional uint32 cdcs11_optional_slot_coor_p0_x = 66;
  optional uint32 cdcs11_optional_slot_coor_p0_y = 67;
  optional uint32 cdcs11_optional_slot_coor_p1_x = 68;
  optional uint32 cdcs11_optional_slot_coor_p1_y = 69;
  optional uint32 cdcs11_optional_slot_coor_p2_x = 70;
  optional uint32 cdcs11_optional_slot_coor_p2_y = 71;
  optional uint32 cdcs11_optional_slot_coor_p3_x = 72;
  optional uint32 cdcs11_optional_slot_coor_p3_y = 73;
  optional uint32 ddcu1_fl_door_ajar = 74;
  optional uint32 ddcu1_rl_door_ajar = 75;
  optional uint32 pdcu1_fr_door_ajar = 76;
  optional uint32 pdcu1_rr_door_ajar = 77;
  optional uint32 btm1_security_sts = 78;
  optional uint32 btm1_phonebat_sts = 79;
  optional uint32 btm1_remote_int_mod_sel = 80;
  optional uint32 btm1_select_slot_id = 81;
  optional uint32 btm1_retry = 82;
  optional uint32 btm1_fix_slot = 83;
  optional uint32 btm1_parking_out_slot_dire = 84;
  optional uint32 btm1_parking_out_slot_type = 85;
  optional uint32 btm1_recover = 86;
  optional uint32 btm1_parking_req = 87;
  optional uint32 btm1_function_mode = 88;
  optional uint32 btm1_optional_slot_dire = 89;
  optional uint32 btm1_optional_slot_type = 90;
  optional uint32 btm1_rolling_counter = 91;
  optional uint32 btm1_remote_park_req = 92;
  optional uint32 btm1_move_ctrl = 93;
  optional uint32 btm1_checksum = 94;
  optional float btm1_optional_slot_angle = 95;
  optional uint32 btm1_optional_slot_coor_p0_x = 96;
  optional uint32 btm1_optional_slot_coor_p0_y = 97;
  optional uint32 btm1_optional_slot_coor_p1_x = 98;
  optional uint32 btm1_optional_slot_coor_p1_y = 99;
  optional uint32 btm1_optional_slot_coor_p2_x = 100;
  optional uint32 btm1_optional_slot_coor_p2_y = 101;
  optional uint32 btm1_optional_slot_coor_p3_x = 102;
  optional uint32 btm1_optional_slot_coor_p3_y = 103;
  optional uint32 tbox2_avm_on_req = 104;
  optional uint32 tbox2_remote_park_start_press_req_sts = 105;
  optional uint32 tbox2_remote_hpp = 106;
  optional uint32 tbox2_avm_view_req = 107;
  optional uint32 tbox2_remote_park_req = 108;
  optional uint32 tbox2_security_sts = 109;
  optional uint32 tbox2_connect_sts = 110;
  optional uint32 tbox2_phone_in_car = 111;
  optional uint32 tbox2_remote_park_abort_req = 112;
  optional uint32 tbox2_remote_park_start_press_req = 113;
  optional uint32 tbox2_remote_park_out_mod_sel = 114;
  optional uint32 tbox2_phone_bat_sts = 115;
  optional uint32 tbox2_remote_int_mod_sel = 116;
  optional uint32 tbox2_remote_sw = 117;
  optional uint32 tbox2_remote_ctr_mod_sel = 118;
  optional uint32 tbox2_remote_ctr_sw = 119;
  optional uint32 tbox2_remote_pick = 120;
  optional uint32 tbox2_nns_suspend = 121;
  optional uint32 tbox2_remote_vh_power = 122;
  optional uint32 tbox2_nrp_req = 123;
  optional uint32 tbox2_sd_map_req = 124;
  optional uint32 tbox2_nns_sw = 125;
  optional uint32 tbox2_rolling_counter = 126;
  optional uint32 tbox2_checksum = 127;
  optional uint32 tbox2_gm_on_req = 128;
  optional uint32 tbox2_360_view_req = 129;
  optional uint32 tbox2_360_spec_view = 130;
  optional uint32 tbox2_pa_pause_recover_req = 131;
  optional uint32 cdcs11_try_hpp = 132;
  optional uint32 cdcs11_avm_diaphaneity = 133;
  optional uint32 cdcs11_hpa_onpath_id1 = 134;
  optional uint32 cdcs11_hpa_onpath_id2 = 135;
  optional uint32 cdcs11_hpa_onpath_id3 = 136;
  optional uint32 cdcs11_hpa_onpath_id4 = 137;
  optional uint32 bdcs1_power_manage_mode = 138;
  optional uint32 btm2_connect_sts = 139;
  optional uint32 btm2_key_position = 140;
  optional uint32 btm3_rke_cmd = 141;
  optional float bms3_state_of_charge = 142;
  optional uint32 bms3_charge_state = 143;
  optional uint32 bdcs13_rls_rq_wiper_spd = 144;
  optional uint32 ddcu1_fl_win_pos = 145;
  optional uint32 ddcu1_rl_win_pos = 146;
  optional uint32 ddcu1_mirror_fold_st = 147;
  optional uint32 pdcu1_fr_win_pos = 148;
  optional uint32 pdcu1_rr_win_pos = 149;
  optional uint32 cdcs11_hpa_select_id = 150;
  optional uint32 bdcs1_power_mode = 151;
  optional uint32 adcs9_pa_frs_on_offset = 154;
  optional uint32 bdcs1_turn_light_sw = 155;
  optional uint32 bdcs1_trunk_lock_sts = 156;
  optional uint32 cdcs11_avm_power_type = 157;
  optional uint32 acu1_crash_status = 158;
}

message AlgFaultDidInfo {
  optional bool bdcs10_ac_outside_temp_valid = 1;
  optional float bdcs10_ac_outside_temp = 2;
  optional uint32 power_supply_voltage = 3;
  optional bool icu1_vehicle_spd_display_valid = 4;
  optional float icu1_vehicle_spd_display = 5;
  optional float icu2_odometer = 6;
  optional uint32 bdcs1_power_manage_mode = 7;
  optional uint32 ignition_status = 8;
}

message AlgIgStInfo {
  optional bool ig_off = 1;
  optional bool acc = 2;
  optional bool ig_on = 3;
  optional bool start = 4;
  optional bool remote_ig_on = 5;
  optional bool reserve_1 = 6;
  optional bool reserve_2 = 7;
}

message AlgChassisTimeInfo {
  optional uint32 calendar_year = 1;
  optional uint32 calendar_month = 2;
  optional uint32 calendar_day = 3;
  optional uint32 hour_of_day = 4;
  optional uint32 minute_of_hour = 5;
  optional uint32 secs_of_minute = 6;
  optional uint32 time_dsp_fmt = 7;
}

message AlgChassisInfo {
  optional uint64 timestamp_us = 1;
  optional AlgHeader header = 2;
  optional bool is_valid = 3;
  optional AlgVcuInfo vcu_info = 4;
  optional AlgSteeringInfo steering_info = 5;
  optional AlgWheelInfo wheel_info = 6;
  optional AlgEscDrivingInfo esc_driving_info = 7;
  optional AlgBodyStateInfo body_state_info = 8;
  optional AlgCenterConsoleInfo center_console_info = 9;
  optional AlgParkInfo park_info = 10;
  optional AlgSWSwitchInfo swswitch_info = 11;
  optional AlgAvmPdsInfo avm_pds_info = 12;
  optional AlgFaultDidInfo fault_did_info = 13;
  optional AlgIgStInfo ig_status_info = 14;
  optional AlgChassisTimeInfo chassis_time_info = 15;
  optional AlgWarnningHmiInfo warnning_hmi_info = 16;
  optional AlgChassisErrorCode error_code = 17;
}

message AlgEgoWarningInfo {
  optional uint32 lca_right_warn_st = 1;
  optional uint32 lca_left_warn_st = 2;
  optional uint32 lca_fault_status = 3;
  optional uint32 lca_state = 4;
  optional uint32 dow_state = 5;
  optional uint32 dow_warn_audio_play = 6;
  optional uint32 dow_left_warn_st = 7;
  optional uint32 dow_right_warn_st = 8;
  optional uint32 dow_fault_status = 9;
  optional uint32 rcta_state = 10;
  optional uint32 rcta_warn_audio_play = 11;
  optional uint32 rcta_obj_type = 12;
  optional uint32 rcta_left_warn_st = 13;
  optional uint32 rcta_right_warn_st = 14;
  optional uint32 rcta_fault_status = 15;
  optional uint32 fcta_state = 16;
  optional uint32 fcta_warn_audio_play = 17;
  optional uint32 fcta_obj_type = 18;
  optional uint32 fcta_left_warn_st = 19;
  optional uint32 fcta_right_warn_st = 20;
  optional uint32 fcta_fault_status = 21;
  optional uint32 rcw_state = 22;
  optional uint32 rcw_warn_audio_play = 23;
  optional uint32 rcw_warn_st = 24;
  optional uint32 rcw_fault_status = 25;
  optional uint32 voice_mode = 26;
}

message AlgEgoParkHmiInfo {
  optional uint32 pa_park_bar_percent = 1;
  optional float pa_guide_linee_a = 2;
  optional float pa_guide_linee_b = 3;
  optional float pa_guide_linee_c = 4;
  optional float pa_guide_linee_d = 5;
  optional float pa_guide_linee_x_min = 6;
  optional float pa_guide_linee_x_max = 7;
  optional uint32 hour_of_day = 8;
  optional uint32 minute_of_hour = 9;
  optional uint32 second_of_minute = 10;
  optional uint32 nns_distance = 11;
  optional uint32 hpa_distance = 12;
  optional uint32 parking_time_remaining = 13;
}

message AlgEgoHmiFrame {
  optional uint64 timestamp_us = 1;
  optional AlgHeader header = 2;
  optional bool is_valid = 3;
  optional AlgEgoWarningInfo warnning_info = 4;
  optional AlgEgoParkHmiInfo park_hmi_info = 5;
}
